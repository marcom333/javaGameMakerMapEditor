/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xml.projectAssets.backgrounds;

/**
 *
 * @author eltan
 */
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;

public class Background {
    public boolean hasChanges = false;
    public boolean isNew = false;
    public String name = "background" + String.valueOf(xml.Project.assets.rooms.size());
    public boolean istileset;
    public int tilewidth;
    public int tileheight;
    public int tilexoff;
    public int tileyoff;
    public int tilehsep;
    public int tilevsep;
    public boolean HTile;
    public boolean VTile;
    public ArrayList<Integer> TextureGroups = new ArrayList<>();
    public boolean For3D;
    public int width;
    public int height;
    public String data;
    public BufferedImage image;

    public void BackgroundRead(String xmlFile)
    {
        name = xmlFile.split("\\\\")[1];
        hasChanges = false;
        isNew = false;
        xmlFile = xml.Project.projectFolder + xmlFile + ".background.gmx";
        int num = xml.Project.assets.backgrounds.size() - 1;
        File fXmlFile = new File(xmlFile);
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        try {
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(fXmlFile);
            
            xml.Project.assets.backgrounds.get(num).istileset = doc.getElementsByTagName("istileset").item(0).getTextContent().equals("-1");
            xml.Project.assets.backgrounds.get(num).tilewidth = Integer.valueOf(doc.getElementsByTagName("tilewidth").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).tileheight = Integer.valueOf(doc.getElementsByTagName("tileheight").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).tilexoff = Integer.valueOf(doc.getElementsByTagName("tilexoff").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).tileyoff = Integer.valueOf(doc.getElementsByTagName("tileyoff").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).tilehsep = Integer.valueOf(doc.getElementsByTagName("tilehsep").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).tilevsep = Integer.valueOf(doc.getElementsByTagName("tilevsep").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).HTile = doc.getElementsByTagName("HTile").item(0).getTextContent().equals("-1");
            xml.Project.assets.backgrounds.get(num).VTile = doc.getElementsByTagName("VTile").item(0).getTextContent().equals("-1");
            
            int temp = 0;
            int tSize = doc.getElementsByTagName("TextureGroup" + temp).getLength();
            while (temp < tSize) {
                xml.Project.assets.backgrounds.get(num).TextureGroups.add(Integer.valueOf(doc.getElementsByTagName("TextureGroup" + temp).item(0).getTextContent()));
                temp++;
            }
            
            xml.Project.assets.backgrounds.get(num).For3D = doc.getElementsByTagName("For3D").item(0).getTextContent().equals("-1");
            xml.Project.assets.backgrounds.get(num).width = Integer.valueOf(doc.getElementsByTagName("width").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).height = Integer.valueOf(doc.getElementsByTagName("height").item(0).getTextContent());
            xml.Project.assets.backgrounds.get(num).data = doc.getElementsByTagName("data").item(0).getTextContent();
            xml.Project.assets.backgrounds.get(num).image = ImageIO.read(new File(xml.Project.projectFolder + "background\\" + xml.Project.assets.backgrounds.get(num).data));
        }
            catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @Override
    public String toString()
    {
        String textureGroup = "";
        int i = 0;
        for (int group : TextureGroups)
        {
            textureGroup += "    <TextureGroup" + i + ">" + group + "</TextureGroup" + i + ">\n";
            i++;
        }

        return  "<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->\n" +
                "<background>\n" +
                "  <istileset>" + (istileset ? 1 : 0) * -1 + "</istileset>\n" +
                "  <tilewidth>" + tilewidth + "</tilewidth>\n" +
                "  <tileheight>" + tileheight + "</tileheight>\n" +
                "  <tilexoff>" + tilexoff + "</tilexoff>\n" +
                "  <tileyoff>" + tileyoff + "</tileyoff>\n" +
                "  <tilehsep>" + tilehsep + "</tilehsep>\n" +
                "  <tilevsep>" + tilevsep + "</tilevsep>\n" +
                "  <HTile>" + (HTile ? 1 : 0) * -1 + "</HTile>\n" +
                "  <VTile>" + (VTile ? 1 : 0) * -1 + "</VTile>\n" +
                "  <TextureGroups>\n" +
                    textureGroup +
                "  </TextureGroups>\n" +
                "  <For3D>" + (For3D ? 1 : 0) * -1 + "</For3D>\n" +
                "  <width>" + width + "</width>\n" +
                "  <height>" + height + "</height>\n" +
                "  <data>" + data + "</data>\n" +
                "</background>";
    }
}
